<?php
/**
 * @file
 * Installation file for Ultimate Cron
 */

/**
 * Implements hook_schema().
 */
function ultimate_cron_schema() {
  $schema = array();

  $schema['ultimate_cron_log'] = array(
    'description' => 'Logs',
    'fields' => array(
      'lid' => array(
        'description' => 'Lock ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'log_type' => array(
        'description' => 'Log type',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'start_time' => array(
        'description' => 'Timestamp of execution start',
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
      'end_time' => array(
        'description' => 'Timestamp of execution end',
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'User ID',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
      ),
      'init_message' => array(
        'description' => 'Initial message',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'message' => array(
        'description' => 'Message',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'severity' => array(
        'description' => 'Max severity level of the execution',
        'type' => 'int',
        'size' => 'normal',
        'not null' => FALSE,
        'default' => -1,
      ),
    ),
    'primary key' => array('lid'),
    'indexes' => array(
      'idx_last' => array(
        'name',
        'start_time',
        'end_time',
        'log_type',
      ),
    ),
  );

  $schema['ultimate_cron_lock'] = array(
    'description' => 'Locks',
    'fields' => array(
      'lid' => array(
        'description' => 'Lock ID',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Name',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'current' => array(
        'description' => 'Current lock',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
      'expire' => array(
        'description' => 'Expiration time of lock',
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('lid'),
    'unique keys' => array(
      'idx_name' => array('name', 'current'),
    ),
  );

  $schema['ultimate_cron_signal'] = array(
    'description' => 'Signals',
    'fields' => array(
      'job_name' => array(
        'description' => 'Name of job',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'signal_name' => array(
        'description' => 'Name of signal',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'claimed' => array(
        'description' => 'Is signal claimed',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('job_name', 'signal_name'),
  );
}

/**
 * Implements hook_install().
 */
function ultimate_cron_install() {
  \Drupal::config('system.cron')->set('threshold.autorun', 0)->save();

  debug('run install hook');

  foreach (\Drupal::moduleHandler()->getImplementations('cron') as $module_name) {
    $values = array(
      'title' => $module_name . ' cronjob title',
      'id' => $module_name . '_job',
      'module' => $module_name,
      'callback' => $module_name . '_cron',
    );

    \Drupal\ultimate_cron\CronJobHelper::createCronJob($values);
  }
}

/**
 * Implements hook_requirements().
 */
function ultimate_cron_requirements($phase) {
  $response = array();

  //@TODO: Implement this.
  return array();
  switch ($phase) {
    case 'install':
      return $response;

    case 'runtime':
      $response['title'] = 'Ultimate Cron';
      $response['value'] = array();
      $response['description'] = array();
      $response['severity'] = REQUIREMENT_OK;

      // Check if any jobs are behind.
      $jobs_behind = 0;
      $jobs = ultimate_cron_job_load_all();
      $class = _ultimate_cron_get_class('job');
      $log_entries = $class::loadLatestLogEntries($jobs);

      foreach ($jobs as $job) {
        $job->log_entry = $log_entries[$job->name];
        if ($job->isBehindSchedule()) {
          $jobs_behind++;
        }
      }
      if ($jobs_behind) {
        $response['severity'] = $response['severity'] > REQUIREMENT_ERROR ? $response['severity'] : REQUIREMENT_ERROR;
        $response['value'][] = \Drupal::translation()->formatPlural(
          $jobs_behind,
          '@count job is behind schedule',
          '@count jobs are behind schedule'
        );
        $response['description'][] = t(
          'Some jobs are behind their schedule. Please check if !link is running properly.', array(
          '!link' => l(t('cron'), 'admin/config/system/cron')
        ));
      }

      // Check for PHP safe mode.
      if (ini_get('safe_mode')) {
        $response['severity'] = $response['severity'] > REQUIREMENT_WARNING ? $response['severity'] : REQUIREMENT_WARNING;
        $response['value'][] = t('Safe mode enabled');
        $response['description'][] = t('Safe mode enabled. Ultimate Cron is unable to control maximum execution time for cron jobs. This may cause cron jobs to end prematurely.');
      }

      // Compose result.
      if (empty($response['value'])) {
        $response['value'] = t('Cron is running properly.');
        $response['description'] = '';
      }
      else {
        $response['value'] = implode(', ', $response['value']);
        $response['description'] = implode('<br/>', $response['description']);
      }
      $result = array();
      $result['ultimate_cron'] = $response;
      return $result;
  }
}
