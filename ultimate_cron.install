<?php
/**
 * @file
 *
 * Installation file for Ultimate Cron
 */

/**
 * Implementation of hook_schema().
 */
function ultimate_cron_schema() {
  $schema = array();

  $schema['ultimate_cron_function'] = array(
    'description' => 'Cron job function list',
    'fields' => array(
      'fid' => array(
        'description' => 'Function ID',
        'type' => 'serial',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'function' => array(
        'description' => 'Function name',
        'type' => 'varchar',
        'length' => 127,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('fid'),
    'unique key' => array('function'),
  );

  $schema['ultimate_cron_configuration'] = array(
    'description' => 'Cron job configuration',
    'fields' => array(
      'fid' => array(
        'description' => 'Function ID',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'configuration' => array(
        'description' => 'Configuration',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('fid'),
  );

  $schema['ultimate_cron_log'] = array(
    'description' => t('Logs'),
    'fields' => array(
      'lid' => array(
        'description' => 'Log ID',
        'type' => 'serial',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'Function ID',
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'start' => array(
        'description' => 'Timstamp of execution start',
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
      'end' => array(
        'description' => 'Timstamp of execution end',
        'type' => 'float',
        'size' => 'big',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Status of the execution',
        'type' => 'int',
        'size' => 'normal',
        'not null' => FALSE,
        'default' => NULL,
      ),
      'msg' => array(
        'description' => 'Message',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('lid'),
    'indexes' => array(
       'idx_last' => array('fid', 'start'),
       'idx_count' => array('fid', 'end'),
    ),
  );

  return $schema;
}

/**
 * Implementation of hook_enable().
 */
function ultimate_cron_enable() {
  // Disable built-in poor mans cron
  variable_set('cron_safe_threshold', 0);
  
  // Max modules weight
  module_load_include('module', 'ultimate_cron');
  ultimate_cron_reclaim();
}

function ultimate_cron_update_7000() {
  db_add_field('ultimate_cron_log', 'msg', array(
    'description' => 'Message',
    'type' => 'text',
    'not null' => FALSE,
  ));
  db_query("UPDATE {ultimate_cron_log} l JOIN {ultimate_cron_log_message} m ON l.lid = m.lid SET l.msg = m.msg");
  db_drop_table('ultimate_cron_log_message');
}

/**
 * Implements hook_update_N().
 */
function ultimate_cron_update_7001() {
  // Convert polling latency from microseconds to miliseconds.
  $polling_latency = variable_get('ultimate_cron_queue_polling_latency', NULL);
  if ($polling_latency) {
    $polling_latency /= 1000;
    variable_set('ultimate_cron_queue_polling_latency', $polling_latency);
  }
}
